//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Franka
{
    [Serializable]
    public class ErrorsMsg : Message
    {
        public const string k_RosMessageName = "franka_msgs/Errors";
        public override string RosMessageName => k_RosMessageName;

        public bool joint_position_limits_violation;
        public bool cartesian_position_limits_violation;
        public bool self_collision_avoidance_violation;
        public bool joint_velocity_violation;
        public bool cartesian_velocity_violation;
        public bool force_control_safety_violation;
        public bool joint_reflex;
        public bool cartesian_reflex;
        public bool max_goal_pose_deviation_violation;
        public bool max_path_pose_deviation_violation;
        public bool cartesian_velocity_profile_safety_violation;
        public bool joint_position_motion_generator_start_pose_invalid;
        public bool joint_motion_generator_position_limits_violation;
        public bool joint_motion_generator_velocity_limits_violation;
        public bool joint_motion_generator_velocity_discontinuity;
        public bool joint_motion_generator_acceleration_discontinuity;
        public bool cartesian_position_motion_generator_start_pose_invalid;
        public bool cartesian_motion_generator_elbow_limit_violation;
        public bool cartesian_motion_generator_velocity_limits_violation;
        public bool cartesian_motion_generator_velocity_discontinuity;
        public bool cartesian_motion_generator_acceleration_discontinuity;
        public bool cartesian_motion_generator_elbow_sign_inconsistent;
        public bool cartesian_motion_generator_start_elbow_invalid;
        public bool cartesian_motion_generator_joint_position_limits_violation;
        public bool cartesian_motion_generator_joint_velocity_limits_violation;
        public bool cartesian_motion_generator_joint_velocity_discontinuity;
        public bool cartesian_motion_generator_joint_acceleration_discontinuity;
        public bool cartesian_position_motion_generator_invalid_frame;
        public bool force_controller_desired_force_tolerance_violation;
        public bool controller_torque_discontinuity;
        public bool start_elbow_sign_inconsistent;
        public bool communication_constraints_violation;
        public bool power_limit_violation;
        public bool joint_p2p_insufficient_torque_for_planning;
        public bool tau_j_range_violation;
        public bool instability_detected;
        public bool joint_move_in_wrong_direction;
        public bool cartesian_spline_motion_generator_violation;
        public bool joint_via_motion_generator_planning_joint_limit_violation;
        public bool base_acceleration_initialization_timeout;
        public bool base_acceleration_invalid_reading;

        public ErrorsMsg()
        {
            this.joint_position_limits_violation = false;
            this.cartesian_position_limits_violation = false;
            this.self_collision_avoidance_violation = false;
            this.joint_velocity_violation = false;
            this.cartesian_velocity_violation = false;
            this.force_control_safety_violation = false;
            this.joint_reflex = false;
            this.cartesian_reflex = false;
            this.max_goal_pose_deviation_violation = false;
            this.max_path_pose_deviation_violation = false;
            this.cartesian_velocity_profile_safety_violation = false;
            this.joint_position_motion_generator_start_pose_invalid = false;
            this.joint_motion_generator_position_limits_violation = false;
            this.joint_motion_generator_velocity_limits_violation = false;
            this.joint_motion_generator_velocity_discontinuity = false;
            this.joint_motion_generator_acceleration_discontinuity = false;
            this.cartesian_position_motion_generator_start_pose_invalid = false;
            this.cartesian_motion_generator_elbow_limit_violation = false;
            this.cartesian_motion_generator_velocity_limits_violation = false;
            this.cartesian_motion_generator_velocity_discontinuity = false;
            this.cartesian_motion_generator_acceleration_discontinuity = false;
            this.cartesian_motion_generator_elbow_sign_inconsistent = false;
            this.cartesian_motion_generator_start_elbow_invalid = false;
            this.cartesian_motion_generator_joint_position_limits_violation = false;
            this.cartesian_motion_generator_joint_velocity_limits_violation = false;
            this.cartesian_motion_generator_joint_velocity_discontinuity = false;
            this.cartesian_motion_generator_joint_acceleration_discontinuity = false;
            this.cartesian_position_motion_generator_invalid_frame = false;
            this.force_controller_desired_force_tolerance_violation = false;
            this.controller_torque_discontinuity = false;
            this.start_elbow_sign_inconsistent = false;
            this.communication_constraints_violation = false;
            this.power_limit_violation = false;
            this.joint_p2p_insufficient_torque_for_planning = false;
            this.tau_j_range_violation = false;
            this.instability_detected = false;
            this.joint_move_in_wrong_direction = false;
            this.cartesian_spline_motion_generator_violation = false;
            this.joint_via_motion_generator_planning_joint_limit_violation = false;
            this.base_acceleration_initialization_timeout = false;
            this.base_acceleration_invalid_reading = false;
        }

        public ErrorsMsg(bool joint_position_limits_violation, bool cartesian_position_limits_violation, bool self_collision_avoidance_violation, bool joint_velocity_violation, bool cartesian_velocity_violation, bool force_control_safety_violation, bool joint_reflex, bool cartesian_reflex, bool max_goal_pose_deviation_violation, bool max_path_pose_deviation_violation, bool cartesian_velocity_profile_safety_violation, bool joint_position_motion_generator_start_pose_invalid, bool joint_motion_generator_position_limits_violation, bool joint_motion_generator_velocity_limits_violation, bool joint_motion_generator_velocity_discontinuity, bool joint_motion_generator_acceleration_discontinuity, bool cartesian_position_motion_generator_start_pose_invalid, bool cartesian_motion_generator_elbow_limit_violation, bool cartesian_motion_generator_velocity_limits_violation, bool cartesian_motion_generator_velocity_discontinuity, bool cartesian_motion_generator_acceleration_discontinuity, bool cartesian_motion_generator_elbow_sign_inconsistent, bool cartesian_motion_generator_start_elbow_invalid, bool cartesian_motion_generator_joint_position_limits_violation, bool cartesian_motion_generator_joint_velocity_limits_violation, bool cartesian_motion_generator_joint_velocity_discontinuity, bool cartesian_motion_generator_joint_acceleration_discontinuity, bool cartesian_position_motion_generator_invalid_frame, bool force_controller_desired_force_tolerance_violation, bool controller_torque_discontinuity, bool start_elbow_sign_inconsistent, bool communication_constraints_violation, bool power_limit_violation, bool joint_p2p_insufficient_torque_for_planning, bool tau_j_range_violation, bool instability_detected, bool joint_move_in_wrong_direction, bool cartesian_spline_motion_generator_violation, bool joint_via_motion_generator_planning_joint_limit_violation, bool base_acceleration_initialization_timeout, bool base_acceleration_invalid_reading)
        {
            this.joint_position_limits_violation = joint_position_limits_violation;
            this.cartesian_position_limits_violation = cartesian_position_limits_violation;
            this.self_collision_avoidance_violation = self_collision_avoidance_violation;
            this.joint_velocity_violation = joint_velocity_violation;
            this.cartesian_velocity_violation = cartesian_velocity_violation;
            this.force_control_safety_violation = force_control_safety_violation;
            this.joint_reflex = joint_reflex;
            this.cartesian_reflex = cartesian_reflex;
            this.max_goal_pose_deviation_violation = max_goal_pose_deviation_violation;
            this.max_path_pose_deviation_violation = max_path_pose_deviation_violation;
            this.cartesian_velocity_profile_safety_violation = cartesian_velocity_profile_safety_violation;
            this.joint_position_motion_generator_start_pose_invalid = joint_position_motion_generator_start_pose_invalid;
            this.joint_motion_generator_position_limits_violation = joint_motion_generator_position_limits_violation;
            this.joint_motion_generator_velocity_limits_violation = joint_motion_generator_velocity_limits_violation;
            this.joint_motion_generator_velocity_discontinuity = joint_motion_generator_velocity_discontinuity;
            this.joint_motion_generator_acceleration_discontinuity = joint_motion_generator_acceleration_discontinuity;
            this.cartesian_position_motion_generator_start_pose_invalid = cartesian_position_motion_generator_start_pose_invalid;
            this.cartesian_motion_generator_elbow_limit_violation = cartesian_motion_generator_elbow_limit_violation;
            this.cartesian_motion_generator_velocity_limits_violation = cartesian_motion_generator_velocity_limits_violation;
            this.cartesian_motion_generator_velocity_discontinuity = cartesian_motion_generator_velocity_discontinuity;
            this.cartesian_motion_generator_acceleration_discontinuity = cartesian_motion_generator_acceleration_discontinuity;
            this.cartesian_motion_generator_elbow_sign_inconsistent = cartesian_motion_generator_elbow_sign_inconsistent;
            this.cartesian_motion_generator_start_elbow_invalid = cartesian_motion_generator_start_elbow_invalid;
            this.cartesian_motion_generator_joint_position_limits_violation = cartesian_motion_generator_joint_position_limits_violation;
            this.cartesian_motion_generator_joint_velocity_limits_violation = cartesian_motion_generator_joint_velocity_limits_violation;
            this.cartesian_motion_generator_joint_velocity_discontinuity = cartesian_motion_generator_joint_velocity_discontinuity;
            this.cartesian_motion_generator_joint_acceleration_discontinuity = cartesian_motion_generator_joint_acceleration_discontinuity;
            this.cartesian_position_motion_generator_invalid_frame = cartesian_position_motion_generator_invalid_frame;
            this.force_controller_desired_force_tolerance_violation = force_controller_desired_force_tolerance_violation;
            this.controller_torque_discontinuity = controller_torque_discontinuity;
            this.start_elbow_sign_inconsistent = start_elbow_sign_inconsistent;
            this.communication_constraints_violation = communication_constraints_violation;
            this.power_limit_violation = power_limit_violation;
            this.joint_p2p_insufficient_torque_for_planning = joint_p2p_insufficient_torque_for_planning;
            this.tau_j_range_violation = tau_j_range_violation;
            this.instability_detected = instability_detected;
            this.joint_move_in_wrong_direction = joint_move_in_wrong_direction;
            this.cartesian_spline_motion_generator_violation = cartesian_spline_motion_generator_violation;
            this.joint_via_motion_generator_planning_joint_limit_violation = joint_via_motion_generator_planning_joint_limit_violation;
            this.base_acceleration_initialization_timeout = base_acceleration_initialization_timeout;
            this.base_acceleration_invalid_reading = base_acceleration_invalid_reading;
        }

        public static ErrorsMsg Deserialize(MessageDeserializer deserializer) => new ErrorsMsg(deserializer);

        private ErrorsMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.joint_position_limits_violation);
            deserializer.Read(out this.cartesian_position_limits_violation);
            deserializer.Read(out this.self_collision_avoidance_violation);
            deserializer.Read(out this.joint_velocity_violation);
            deserializer.Read(out this.cartesian_velocity_violation);
            deserializer.Read(out this.force_control_safety_violation);
            deserializer.Read(out this.joint_reflex);
            deserializer.Read(out this.cartesian_reflex);
            deserializer.Read(out this.max_goal_pose_deviation_violation);
            deserializer.Read(out this.max_path_pose_deviation_violation);
            deserializer.Read(out this.cartesian_velocity_profile_safety_violation);
            deserializer.Read(out this.joint_position_motion_generator_start_pose_invalid);
            deserializer.Read(out this.joint_motion_generator_position_limits_violation);
            deserializer.Read(out this.joint_motion_generator_velocity_limits_violation);
            deserializer.Read(out this.joint_motion_generator_velocity_discontinuity);
            deserializer.Read(out this.joint_motion_generator_acceleration_discontinuity);
            deserializer.Read(out this.cartesian_position_motion_generator_start_pose_invalid);
            deserializer.Read(out this.cartesian_motion_generator_elbow_limit_violation);
            deserializer.Read(out this.cartesian_motion_generator_velocity_limits_violation);
            deserializer.Read(out this.cartesian_motion_generator_velocity_discontinuity);
            deserializer.Read(out this.cartesian_motion_generator_acceleration_discontinuity);
            deserializer.Read(out this.cartesian_motion_generator_elbow_sign_inconsistent);
            deserializer.Read(out this.cartesian_motion_generator_start_elbow_invalid);
            deserializer.Read(out this.cartesian_motion_generator_joint_position_limits_violation);
            deserializer.Read(out this.cartesian_motion_generator_joint_velocity_limits_violation);
            deserializer.Read(out this.cartesian_motion_generator_joint_velocity_discontinuity);
            deserializer.Read(out this.cartesian_motion_generator_joint_acceleration_discontinuity);
            deserializer.Read(out this.cartesian_position_motion_generator_invalid_frame);
            deserializer.Read(out this.force_controller_desired_force_tolerance_violation);
            deserializer.Read(out this.controller_torque_discontinuity);
            deserializer.Read(out this.start_elbow_sign_inconsistent);
            deserializer.Read(out this.communication_constraints_violation);
            deserializer.Read(out this.power_limit_violation);
            deserializer.Read(out this.joint_p2p_insufficient_torque_for_planning);
            deserializer.Read(out this.tau_j_range_violation);
            deserializer.Read(out this.instability_detected);
            deserializer.Read(out this.joint_move_in_wrong_direction);
            deserializer.Read(out this.cartesian_spline_motion_generator_violation);
            deserializer.Read(out this.joint_via_motion_generator_planning_joint_limit_violation);
            deserializer.Read(out this.base_acceleration_initialization_timeout);
            deserializer.Read(out this.base_acceleration_invalid_reading);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.joint_position_limits_violation);
            serializer.Write(this.cartesian_position_limits_violation);
            serializer.Write(this.self_collision_avoidance_violation);
            serializer.Write(this.joint_velocity_violation);
            serializer.Write(this.cartesian_velocity_violation);
            serializer.Write(this.force_control_safety_violation);
            serializer.Write(this.joint_reflex);
            serializer.Write(this.cartesian_reflex);
            serializer.Write(this.max_goal_pose_deviation_violation);
            serializer.Write(this.max_path_pose_deviation_violation);
            serializer.Write(this.cartesian_velocity_profile_safety_violation);
            serializer.Write(this.joint_position_motion_generator_start_pose_invalid);
            serializer.Write(this.joint_motion_generator_position_limits_violation);
            serializer.Write(this.joint_motion_generator_velocity_limits_violation);
            serializer.Write(this.joint_motion_generator_velocity_discontinuity);
            serializer.Write(this.joint_motion_generator_acceleration_discontinuity);
            serializer.Write(this.cartesian_position_motion_generator_start_pose_invalid);
            serializer.Write(this.cartesian_motion_generator_elbow_limit_violation);
            serializer.Write(this.cartesian_motion_generator_velocity_limits_violation);
            serializer.Write(this.cartesian_motion_generator_velocity_discontinuity);
            serializer.Write(this.cartesian_motion_generator_acceleration_discontinuity);
            serializer.Write(this.cartesian_motion_generator_elbow_sign_inconsistent);
            serializer.Write(this.cartesian_motion_generator_start_elbow_invalid);
            serializer.Write(this.cartesian_motion_generator_joint_position_limits_violation);
            serializer.Write(this.cartesian_motion_generator_joint_velocity_limits_violation);
            serializer.Write(this.cartesian_motion_generator_joint_velocity_discontinuity);
            serializer.Write(this.cartesian_motion_generator_joint_acceleration_discontinuity);
            serializer.Write(this.cartesian_position_motion_generator_invalid_frame);
            serializer.Write(this.force_controller_desired_force_tolerance_violation);
            serializer.Write(this.controller_torque_discontinuity);
            serializer.Write(this.start_elbow_sign_inconsistent);
            serializer.Write(this.communication_constraints_violation);
            serializer.Write(this.power_limit_violation);
            serializer.Write(this.joint_p2p_insufficient_torque_for_planning);
            serializer.Write(this.tau_j_range_violation);
            serializer.Write(this.instability_detected);
            serializer.Write(this.joint_move_in_wrong_direction);
            serializer.Write(this.cartesian_spline_motion_generator_violation);
            serializer.Write(this.joint_via_motion_generator_planning_joint_limit_violation);
            serializer.Write(this.base_acceleration_initialization_timeout);
            serializer.Write(this.base_acceleration_invalid_reading);
        }

        public override string ToString()
        {
            return "ErrorsMsg: " +
            "\njoint_position_limits_violation: " + joint_position_limits_violation.ToString() +
            "\ncartesian_position_limits_violation: " + cartesian_position_limits_violation.ToString() +
            "\nself_collision_avoidance_violation: " + self_collision_avoidance_violation.ToString() +
            "\njoint_velocity_violation: " + joint_velocity_violation.ToString() +
            "\ncartesian_velocity_violation: " + cartesian_velocity_violation.ToString() +
            "\nforce_control_safety_violation: " + force_control_safety_violation.ToString() +
            "\njoint_reflex: " + joint_reflex.ToString() +
            "\ncartesian_reflex: " + cartesian_reflex.ToString() +
            "\nmax_goal_pose_deviation_violation: " + max_goal_pose_deviation_violation.ToString() +
            "\nmax_path_pose_deviation_violation: " + max_path_pose_deviation_violation.ToString() +
            "\ncartesian_velocity_profile_safety_violation: " + cartesian_velocity_profile_safety_violation.ToString() +
            "\njoint_position_motion_generator_start_pose_invalid: " + joint_position_motion_generator_start_pose_invalid.ToString() +
            "\njoint_motion_generator_position_limits_violation: " + joint_motion_generator_position_limits_violation.ToString() +
            "\njoint_motion_generator_velocity_limits_violation: " + joint_motion_generator_velocity_limits_violation.ToString() +
            "\njoint_motion_generator_velocity_discontinuity: " + joint_motion_generator_velocity_discontinuity.ToString() +
            "\njoint_motion_generator_acceleration_discontinuity: " + joint_motion_generator_acceleration_discontinuity.ToString() +
            "\ncartesian_position_motion_generator_start_pose_invalid: " + cartesian_position_motion_generator_start_pose_invalid.ToString() +
            "\ncartesian_motion_generator_elbow_limit_violation: " + cartesian_motion_generator_elbow_limit_violation.ToString() +
            "\ncartesian_motion_generator_velocity_limits_violation: " + cartesian_motion_generator_velocity_limits_violation.ToString() +
            "\ncartesian_motion_generator_velocity_discontinuity: " + cartesian_motion_generator_velocity_discontinuity.ToString() +
            "\ncartesian_motion_generator_acceleration_discontinuity: " + cartesian_motion_generator_acceleration_discontinuity.ToString() +
            "\ncartesian_motion_generator_elbow_sign_inconsistent: " + cartesian_motion_generator_elbow_sign_inconsistent.ToString() +
            "\ncartesian_motion_generator_start_elbow_invalid: " + cartesian_motion_generator_start_elbow_invalid.ToString() +
            "\ncartesian_motion_generator_joint_position_limits_violation: " + cartesian_motion_generator_joint_position_limits_violation.ToString() +
            "\ncartesian_motion_generator_joint_velocity_limits_violation: " + cartesian_motion_generator_joint_velocity_limits_violation.ToString() +
            "\ncartesian_motion_generator_joint_velocity_discontinuity: " + cartesian_motion_generator_joint_velocity_discontinuity.ToString() +
            "\ncartesian_motion_generator_joint_acceleration_discontinuity: " + cartesian_motion_generator_joint_acceleration_discontinuity.ToString() +
            "\ncartesian_position_motion_generator_invalid_frame: " + cartesian_position_motion_generator_invalid_frame.ToString() +
            "\nforce_controller_desired_force_tolerance_violation: " + force_controller_desired_force_tolerance_violation.ToString() +
            "\ncontroller_torque_discontinuity: " + controller_torque_discontinuity.ToString() +
            "\nstart_elbow_sign_inconsistent: " + start_elbow_sign_inconsistent.ToString() +
            "\ncommunication_constraints_violation: " + communication_constraints_violation.ToString() +
            "\npower_limit_violation: " + power_limit_violation.ToString() +
            "\njoint_p2p_insufficient_torque_for_planning: " + joint_p2p_insufficient_torque_for_planning.ToString() +
            "\ntau_j_range_violation: " + tau_j_range_violation.ToString() +
            "\ninstability_detected: " + instability_detected.ToString() +
            "\njoint_move_in_wrong_direction: " + joint_move_in_wrong_direction.ToString() +
            "\ncartesian_spline_motion_generator_violation: " + cartesian_spline_motion_generator_violation.ToString() +
            "\njoint_via_motion_generator_planning_joint_limit_violation: " + joint_via_motion_generator_planning_joint_limit_violation.ToString() +
            "\nbase_acceleration_initialization_timeout: " + base_acceleration_initialization_timeout.ToString() +
            "\nbase_acceleration_invalid_reading: " + base_acceleration_invalid_reading.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
