//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.FrankaExampleControllers
{
    [Serializable]
    public class JointTorqueComparisonMsg : Message
    {
        public const string k_RosMessageName = "franka_example_controllers/JointTorqueComparison";
        public override string RosMessageName => k_RosMessageName;

        public double[] tau_error;
        public double[] tau_commanded;
        public double[] tau_measured;
        public double root_mean_square_error;

        public JointTorqueComparisonMsg()
        {
            this.tau_error = new double[7];
            this.tau_commanded = new double[7];
            this.tau_measured = new double[7];
            this.root_mean_square_error = 0.0;
        }

        public JointTorqueComparisonMsg(double[] tau_error, double[] tau_commanded, double[] tau_measured, double root_mean_square_error)
        {
            this.tau_error = tau_error;
            this.tau_commanded = tau_commanded;
            this.tau_measured = tau_measured;
            this.root_mean_square_error = root_mean_square_error;
        }

        public static JointTorqueComparisonMsg Deserialize(MessageDeserializer deserializer) => new JointTorqueComparisonMsg(deserializer);

        private JointTorqueComparisonMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.tau_error, sizeof(double), 7);
            deserializer.Read(out this.tau_commanded, sizeof(double), 7);
            deserializer.Read(out this.tau_measured, sizeof(double), 7);
            deserializer.Read(out this.root_mean_square_error);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.tau_error);
            serializer.Write(this.tau_commanded);
            serializer.Write(this.tau_measured);
            serializer.Write(this.root_mean_square_error);
        }

        public override string ToString()
        {
            return "JointTorqueComparisonMsg: " +
            "\ntau_error: " + System.String.Join(", ", tau_error.ToList()) +
            "\ntau_commanded: " + System.String.Join(", ", tau_commanded.ToList()) +
            "\ntau_measured: " + System.String.Join(", ", tau_measured.ToList()) +
            "\nroot_mean_square_error: " + root_mean_square_error.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
